{"version":3,"sources":["hours.js","tags.js"],"names":["document","querySelector","search","category_id","day","category","days","querySelectorAll","inputHiddenDay","inputHiddenHour","endSearch","e","target","name","value","previousHour","classList","remove","Object","values","includes","forEach","li","add","async","url","result","fetch","events","hoursList","hoursTaken","map","event","String","hour_id","hoursListArray","Array","from","filter","dataset","hourId","hour","addEventListener","chooseHour","getAvailableHours","json","searchEvents","contains","tagsInput","tagsDiv","tagsInputHidden","tags","showTags","textContent","tmpTag","tag","createElement","onclick","deleteTag","append","updateInputHidden","toString","trim","split","keyCode","preventDefault"],"mappings":"CAAA,WAGA,GAFAA,SAAAC,cAAA,UAEA,CACA,IAAAC,EAAA,CACAC,YAAA,GACAC,IAAA,IAGA,MAAAC,EAAAL,SAAAC,cAAA,wBACAK,EAAAN,SAAAO,iBAAA,gBACAC,EAAAR,SAAAC,cAAA,mBACAQ,EAAAT,SAAAC,cAAA,oBAKA,SAAAS,EAAAC,GACAT,EAAAS,EAAAC,OAAAC,MAAAF,EAAAC,OAAAE,MAGAL,EAAAK,MAAA,GACAN,EAAAM,MAAA,GACA,MAAAC,EAAAf,SAAAC,cAAA,0BACAc,GACAA,EAAAC,UAAAC,OAAA,yBAIAC,OAAAC,OAAAjB,GAAAkB,SAAA,IAkDApB,SAAAO,iBAAA,aACAc,QAAAC,IACAA,EAAAN,UAAAO,IAAA,yBACAD,EAAAN,UAAAC,OAAA,2BA9CAO,iBACA,MAAApB,IAAAA,EAAAD,YAAAA,GAAAD,EACAuB,EAAA,+BAAArB,iBAAAD,IACAuB,QAAAC,MAAAF,IAMA,SAAAG,GAEA,MAAAC,EAAA7B,SAAAO,iBAAA,aACAsB,EAAAR,QAAAC,GAAAA,EAAAN,UAAAO,IAAA,0BAGA,MAAAO,EAAAF,EAAAG,IAAAC,GAAAC,OAAAD,EAAAE,UACAC,EAAAC,MAAAC,KAAAR,GAEAM,EAAAG,OAAAhB,IAAAQ,EAAAV,SAAAE,EAAAiB,QAAAC,SACAnB,QAAAC,GAAAA,EAAAN,UAAAC,OAAA,0BAEAjB,SAAAO,iBAAA,yCACAc,QAAAoB,GAAAA,EAAAC,iBAAA,QAAAC,IAhBAC,OAFAlB,EAAAmB,QAPAC,GA4BA,SAAAH,EAAAhC,GAEA,GAAAA,EAAAC,OAAAI,UAAA+B,SAAA,yBACA,OAEA,MAAAhC,EAAAf,SAAAC,cAAA,0BAEAc,GACAA,EAAAC,UAAAC,OAAA,yBAEAN,EAAAC,OAAAI,UAAAO,IAAA,yBACAd,EAAAK,MAAAH,EAAAC,OAAA2B,QAAAC,OAGAhC,EAAAM,MAAAd,SAAAC,cAAA,wBAAAa,MA7DAT,EAAAqC,iBAAA,SAAAhC,GACAJ,EAAAe,QAAAjB,GAAAA,EAAAsC,iBAAA,SAAAhC,KAfA,GCAA,WACA,MAAAsC,EAAAhD,SAAAC,cAAA,eAEA,GAAA+C,EAAA,CACA,MAAAC,EAAAjD,SAAAC,cAAA,SACAiD,EAAAlD,SAAAC,cAAA,iBACA,IAAAkD,EAAA,GAuBA,SAAAC,IACAH,EAAAI,YAAA,GACAF,EAAA9B,QAAAiC,IACA,MAAAC,EAAAvD,SAAAwD,cAAA,MACAD,EAAAvC,UAAAO,IAAA,aACAgC,EAAAF,YAAAC,EACAC,EAAAE,QAAAC,EACAT,EAAAU,OAAAJ,KAGAK,IAGA,SAAAF,EAAA/C,GACAA,EAAAC,OAAAK,SACAkC,EAAAA,EAAAb,OAAAiB,GAAAA,IAAA5C,EAAAC,OAAAyC,aACAO,IAGA,SAAAA,IACAV,EAAApC,MAAAqC,EAAAU,WAxCA,KAAAX,EAAApC,OAAA,KAAAoC,EAAApC,MAAAgD,SACAX,EAAAD,EAAApC,MAAAiD,MAAA,KACAX,KAGAJ,EAAAN,iBAAA,YAEA,SAAA/B,GACA,GAAA,KAAAA,EAAAqD,QAAA,CAEA,GADArD,EAAAsD,iBACA,KAAAtD,EAAAC,OAAAE,MAAAgD,QAAAnD,EAAAC,OAAAE,MAAA,EACA,OAGAqC,EAAA,IAAAA,EAAAxC,EAAAC,OAAAE,MAAAgD,QACAd,EAAAlC,MAAA,GACAsC,SAzBA","file":"bundle.js","sourcesContent":["(function(){\r\n    const hours = document.querySelector(\"#hours\");\r\n\r\n    if(hours) {\r\n        let search = {\r\n            category_id: '',\r\n            day: ''\r\n        };\r\n\r\n        const category = document.querySelector('[name=\"category_id\"]');\r\n        const days = document.querySelectorAll('[name=\"day\"]');\r\n        const inputHiddenDay = document.querySelector('[name=\"day_id\"]');\r\n        const inputHiddenHour = document.querySelector('[name=\"hour_id\"]');\r\n        \r\n        category.addEventListener(\"change\", endSearch);\r\n        days.forEach(day => day.addEventListener(\"change\", endSearch));\r\n\r\n        function endSearch(e) {\r\n            search[e.target.name] = e.target.value;\r\n\r\n            // Reiniciar los campos ocultos y el selector de horas\r\n            inputHiddenHour.value = \"\";\r\n            inputHiddenDay.value = \"\";\r\n            const previousHour = document.querySelector(\".hours__hour--selected\");\r\n            if(previousHour) {\r\n                previousHour.classList.remove(\"hours__hour--selected\");\r\n            }\r\n\r\n            // Si algún campo está vacío, deshabilitar todas las horas y salir\r\n            if(Object.values(search).includes('')) {\r\n                resetAllHours();\r\n                return;\r\n            }\r\n            searchEvents();\r\n        }\r\n\r\n        async function searchEvents() {\r\n            const {day, category_id} = search;\r\n            const url = `/api/events-schedule?day_id=${day}&category_id=${category_id}`;\r\n            const result = await fetch(url);\r\n            const events = await result.json();\r\n\r\n            getAvailableHours(events);\r\n        }\r\n\r\n        function getAvailableHours(events) {\r\n            // Reiniciar las horas\r\n            const hoursList = document.querySelectorAll(\"#hours li\");\r\n            hoursList.forEach(li => li.classList.add(\"hours__hour--disabled\"));\r\n\r\n            // Comprobar eventos ya tomados, y quitar la clase de disabled\r\n            const hoursTaken = events.map(event => String(event.hour_id));\r\n            const hoursListArray = Array.from(hoursList);\r\n\r\n            const result = hoursListArray.filter(li => !hoursTaken.includes(li.dataset.hourId));\r\n            result.forEach(li => li.classList.remove(\"hours__hour--disabled\"));\r\n\r\n            const availableHours = document.querySelectorAll(\"#hours li:not(.hours__hour--disabled)\");\r\n            availableHours.forEach(hour => hour.addEventListener(\"click\", chooseHour));\r\n        }\r\n\r\n        function chooseHour(e) {\r\n            // No hacer nada si la hora está deshabilitada\r\n            if(e.target.classList.contains(\"hours__hour--disabled\")) {\r\n                return; // Salir temprano si la hora no está disponible\r\n            }\r\n            const previousHour = document.querySelector(\".hours__hour--selected\");\r\n\r\n            if(previousHour) {\r\n                previousHour.classList.remove(\"hours__hour--selected\");\r\n            }\r\n            e.target.classList.add(\"hours__hour--selected\");\r\n            inputHiddenHour.value = e.target.dataset.hourId;\r\n\r\n            // Llenar el campo oculto de día\r\n            inputHiddenDay.value = document.querySelector('[name=\"day\"]:checked').value;\r\n        }\r\n\r\n        function resetAllHours() {\r\n            const hoursList = document.querySelectorAll(\"#hours li\");\r\n            hoursList.forEach(li => {\r\n                li.classList.add(\"hours__hour--disabled\");\r\n                li.classList.remove(\"hours__hour--selected\");\r\n            });\r\n        }\r\n    }\r\n})();","(function() {\r\n    const tagsInput = document.querySelector(\"#tags_input\");\r\n\r\n    if(tagsInput) {\r\n        const tagsDiv = document.querySelector(\"#tags\");\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]')\r\n        let tags = [];\r\n        \r\n        // Recuperar del input oculto\r\n        if(tagsInputHidden.value !== \"\" && tagsInputHidden.value.trim() !== \"\") {\r\n            tags = tagsInputHidden.value.split(\",\");\r\n            showTags();\r\n        }\r\n\r\n        tagsInput.addEventListener(\"keypress\", saveTag);\r\n\r\n        function saveTag(e) {\r\n            if(e.keyCode === 44) {\r\n                e.preventDefault();\r\n                if(e.target.value.trim() === \"\" || e.target.value < 1){\r\n                    return\r\n                }\r\n\r\n                tags = [...tags, e.target.value.trim()];\r\n                tagsInput.value = \"\";  \r\n                showTags();\r\n            }\r\n        }\r\n\r\n        function showTags() {\r\n            tagsDiv.textContent = \"\";\r\n            tags.forEach(tmpTag =>{\r\n                const tag = document.createElement(\"LI\");\r\n                tag.classList.add(\"form__tag\");\r\n                tag.textContent = tmpTag;\r\n                tag.onclick = deleteTag;\r\n                tagsDiv.append(tag);\r\n            })\r\n\r\n            updateInputHidden();\r\n        }\r\n\r\n        function deleteTag(e) {\r\n            e.target.remove();\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n            updateInputHidden();\r\n        }\r\n\r\n        function updateInputHidden() {\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n    }\r\n})() // IIFE"]}